-- 1. country relation
DROP TABLE IF EXISTS country;

CREATE TABLE country (
    isoCode     CHAR (15) NOT NULL,
    countryName CHAR (20),
    sourceName  TEXT,
    sourceUrl TEXT,
    PRIMARY KEY (
        isoCode
    ),
    FOREIGN KEY (
        sourceName
    )
    REFERENCES sourceCountry (sourceName),
    FOREIGN KEY (
        sourceUrl
    )
    REFERENCES sourceWebsite (sourceUrl) 
);

-- 2. ageGroup relation
DROP TABLE IF EXISTS ageGroup;

CREATE TABLE ageGroup (
    ageRange CHAR (20) NOT NULL,
    PRIMARY KEY (
        ageRange
    )
);

-- 3. sourceCountry relation
DROP TABLE IF EXISTS sourceCountry;

CREATE TABLE sourceCountry (
    sourceName TEXT NOT NULL,
    PRIMARY KEY (
        sourceName
    )
);

-- 4. sourceWebsite relation
DROP TABLE IF EXISTS sourceWebsite;

CREATE TABLE sourceWebsite (
    sourceUrl TEXT NOT NULL,
    PRIMARY KEY (
        sourceUrl
    )
);

-- 5. state relation
DROP TABLE IF EXISTS state;

CREATE TABLE state (
    stateName CHAR (20) NOT NULL,
    isoCode   CHAR (15) NOT NULL,
    PRIMARY KEY (
        isoCode,
        stateName
    ),
    FOREIGN KEY (
        isoCode
    )
    REFERENCES country (isoCode) 
);

-- 6. vaccinationCountry relation
DROP TABLE IF EXISTS vaccinationCountry;

CREATE TABLE vaccinationCountry (
    isoCode               CHAR (15) NOT NULL,
    date                  TEXT      NOT NULL,
    peopleVaccinated      INTEGER,
    peopleFullyVaccinated INTEGER,
    peopleBooster         INTEGER,
    url                   TEXT,
    PRIMARY KEY (
        isoCode,
        date
    ),
    FOREIGN KEY (
        isoCode
    )
    REFERENCES country (isoCode),
    FOREIGN KEY (
        url
    )
    REFERENCES sourceVaccination (url) 
);

-- 7. sourceVaccination relation
DROP TABLE IF EXISTS sourceVaccination;

CREATE TABLE sourceVaccination (
    url TEXT NOT NULL,
    PRIMARY KEY (
        url
    )
);

-- 8. VaccineAgeGroup relation
DROP TABLE IF EXISTS vaccineAgeGroup;

CREATE TABLE vaccineAgeGroup (
    isoCode                     CHAR (15) NOT NULL,
    date                        TEXT      NOT NULL,
    ageRange                    CHAR (20) NOT NULL,
    peopleVaccinatedPer100      REAL,
    peopleFullyVaccinatedPer100 REAL,
    peopleBoosterPer100         REAL,
    PRIMARY KEY (
        isoCode,
        date,
        ageRange
    ),
    FOREIGN KEY (
        isoCode,
        date
    )
    REFERENCES vaccinationCountry (isoCode,date),
    FOREIGN KEY (
        ageRange
    )
    REFERENCES ageGroup (ageRange) 
);

-- 9. vaccine relation
DROP TABLE IF EXISTS vaccine;

CREATE TABLE vaccine (
    vaccineName TEXT NOT NULL,
    PRIMARY KEY (
        vaccineName
    )
);

-- 10. usedVaccine relation
DROP TABLE IF EXISTS usedVaccine;

CREATE TABLE usedVaccine (
    isoCode     CHAR (15) NOT NULL,
    date        TEXT      NOT NULL,
    vaccineName TEXT      NOT NULL,
    PRIMARY KEY (
        isoCode,
        date,
        vaccineName
    ),
    FOREIGN KEY (
        isoCode,
        date
    )
    REFERENCES vaccinationCountry (isoCode,date),
    FOREIGN KEY (
        vaccineName
    )
    REFERENCES vaccine (vaccineName) 
);

-- 11. VaccinationState relation
DROP TABLE IF EXISTS vaccinationState;

CREATE TABLE vaccinationState (
    isoCode               CHAR (15) NOT NULL,
    stateName             CHAR (20) NOT NULL,
    date                  TEXT      NOT NULL,
    totalDistributed      INTEGER,
    peopleVaccinated      INTEGER,
    peopleFullyVaccinated INTEGER,
    peopleBooster         INTEGER,
    PRIMARY KEY (
        isoCode,
        stateName,
        date
    ),
    FOREIGN KEY (
        isoCode,
        stateName
    )
    REFERENCES state (isoCode,stateName) 
);

-- 12. vaccineManufacturer relation
DROP TABLE IF EXISTS vaccineManufacturer;

CREATE TABLE vaccineManufacturer (
    isoCode     CHAR (15) NOT NULL,
    date        TEXT      NOT NULL,
    vaccineName TEXT      NOT NULL,
    totalVaccine INTEGER,
    PRIMARY KEY (
        isoCode,
        date,
        vaccineName
    ),
    FOREIGN KEY (
        isoCode
    )
    REFERENCES country (isoCode) 
);
